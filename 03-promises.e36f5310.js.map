{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEIC,EAAQ,EACRC,EAAO,EACPC,EAAS,EACTC,EAAW,EAETC,EAAO,CACXC,WAAYC,SAASC,cAAc,UACnCC,UAAWF,SAASC,cAAc,SAClCE,YAAaH,SAASC,cAAc,WACpCG,aAAcJ,SAASC,cAAc,YA4DvC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACLC,KAAKC,SAAW,GAEpCH,EAAQ,CAAEI,SAAAP,EAAUQ,MAAAP,IAEpBG,EAAO,CAAEG,SAAAP,EAAUQ,MAAAP,G,IA/DzBT,EAAKC,WAAWgB,iBAAiB,SAKjC,SAAsBC,GACpBA,EAAMC,iBACNvB,EAAQwB,SAASF,EAAMG,OAAOC,M,IANhCtB,EAAKI,UAAUa,iBAAiB,SAShC,SAAqBC,GACnBA,EAAMC,iBACNtB,EAAOuB,SAASF,EAAMG,OAAOC,M,IAV/BtB,EAAKK,YAAYY,iBAAiB,SAalC,SAAuBC,GACrBA,EAAMC,iBACNrB,EAASsB,SAASF,EAAMG,OAAOC,M,IAdjCtB,EAAKM,aAAaW,iBAAiB,SAiBnC,SAAkBC,GAChBA,EAAMC,iBACNI,YAAW,SAASC,IAGlB,IAFAzB,GAAY,KAEKD,GAAqB,IAAXA,GAA2B,IAAXA,EACzC,OAAOS,EAAcR,EAAUH,GAC5B6B,MAAK,SAAAC,G,IAAGC,EAAQD,EAARX,SAAUa,EAAKF,EAALV,MACjBa,EAAAnC,GAASoC,OAAOC,QACd,uBAAwCC,OAAfL,EAAS,QAAYK,OAANJ,EAAM,M,IAGjDK,OAAM,SAAAP,G,IAAGQ,EAAQR,EAARX,SAAUoB,EAAKT,EAALV,MAClBa,EAAAnC,GAASoC,OAAOM,QACd,sBAAuCJ,OAAfE,EAAS,QAAYF,OAANG,EAAM,M,IAKrD5B,EAAcR,EAAUH,GACrB6B,MAAK,SAAAC,G,IAAGW,EAAQX,EAARX,SAAUuB,EAAKZ,EAALV,MACjBa,EAAAnC,GAASoC,OAAOC,QACd,uBAAwCC,OAAfK,EAAS,QAAYL,OAANM,EAAM,M,IAGjDL,OAAM,SAAAP,G,IAAGa,EAAQb,EAARX,SAAUyB,EAAKd,EAALV,MAClBa,EAAAnC,GAASoC,OAAOM,QACd,sBAAuCJ,OAAfO,EAAS,QAAYP,OAANQ,EAAM,M,IAInD5C,GAASC,EAET0B,WAAWC,EAAK5B,E,GACfA,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nlet delay = 0;\nlet step = 0;\nlet amount = 0;\nlet position = 0;\n\nconst refs = {\n  inputDelay: document.querySelector('.delay'),\n  inputStep: document.querySelector('.step'),\n  inputAmount: document.querySelector('.amount'),\n  buttonSubmit: document.querySelector('.submit'),\n};\n\nrefs.inputDelay.addEventListener('input', onInputDelay);\nrefs.inputStep.addEventListener('input', onInputStep);\nrefs.inputAmount.addEventListener('input', onInputAmount);\nrefs.buttonSubmit.addEventListener('click', onSubmit);\n\nfunction onInputDelay(event) {\n  event.preventDefault();\n  delay = parseInt(event.target.value);\n}\n\nfunction onInputStep(event) {\n  event.preventDefault();\n  step = parseInt(event.target.value);\n}\n\nfunction onInputAmount(event) {\n  event.preventDefault();\n  amount = parseInt(event.target.value);\n}\n\nfunction onSubmit(event) {\n  event.preventDefault();\n  setTimeout(function run() {\n    position += 1;\n\n    if (position === amount || amount === 0 || amount === 1) {\n      return createPromise(position, delay)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${delay}ms`\n          );\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(\n            `❌ Rejected promise ${position} in ${delay}ms`\n          );\n        });\n    }\n\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n\n    delay += step;\n\n    setTimeout(run, delay);\n  }, delay);\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      resolve({ position, delay });\n    } else {\n      reject({ position, delay });\n    }\n  });\n}\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n\n// function createPromise(position, delay) {\n//   return new Promise((resolve, reject) => {\n//     const shouldResolve = Math.random() > 0.3;\n//     if (shouldResolve) {\n//       resolve('Проміс виконується успішно');\n//     } else {\n//       reject('Проміс ПОМИЛКА');\n//     }\n//   });\n// }\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$delay","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$position","$ce04d3a99e08e73b$var$refs","inputDelay","document","querySelector","inputStep","inputAmount","buttonSubmit","$ce04d3a99e08e73b$var$createPromise","position5","delay5","Promise","resolve","reject","Math","random","position","delay","addEventListener","event","preventDefault","parseInt","target","value","setTimeout","run","then","param","position1","delay1","$parcel$interopDefault","Notify","success","concat","catch","position2","delay2","failure","position3","delay3","position4","delay4"],"version":3,"file":"03-promises.e36f5310.js.map"}